### This file was generated by Nexus Schema
### Do not make changes to this file directly


input CredentialsInput {
  email: String!
  password: String!
}

type Mutation {
  postCreate(authorId: String, post: PostInput): PostResponse
  postDelete(postId: Int!): PostResponse
  postPublish(postId: Int!): PostResponse
  postUnpublish(postId: Int!): PostResponse
  postUpdate(post: PostInput, postId: Int!): PostResponse
  signin(credentials: CredentialsInput!): UserResponse
  signup(bio: String!, credentials: CredentialsInput!, name: String): UserResponse
}

type Post {
  author: User!
  content: String!
  createdAt: String!
  id: Int!
  published: Boolean!
  title: String!
  updatedAt: String!
}

input PostInput {
  content: String
  title: String
}

type PostListResponse implements Response {
  code: Int!
  error: ResponseError
  message: String!
  posts: [Post]
  success: Boolean!
}

type PostResponse implements Response {
  code: Int!
  error: ResponseError
  message: String!
  post: Post
  success: Boolean!
}

type Profile {
  bio: String
  id: Int
  user: User
}

type Query {
  ok: Boolean!
}

interface Response {
  code: Int!
  error: ResponseError
  message: String!
  success: Boolean!
}

type ResponseError {
  code: String
  errorCode: String
  message: String
  name: String
}

type User {
  email: String
  id: Int
  name: String
  posts: [Post]
  profile: Profile
}

type UserResponse implements Response {
  code: Int!
  error: ResponseError
  message: String!
  success: Boolean!
  token: String
}